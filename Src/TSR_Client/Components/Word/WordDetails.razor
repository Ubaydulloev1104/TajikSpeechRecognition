@using Application.Contracts.WordClient
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Net
@using Blazorise.Extensions
@using TSR_Client.Services.ConverterService
@inject AuthenticationStateProvider Provider
@inject IApplicationService ApplicationService
@inject IDateTimeConvertToStringService DateTimeConvert
@if (wordDetails is null || words == null)
{
    if (_showLoader)
    {
        <div style="text-align: center;">
            <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
        </div>
    }
}
else
{
    <MudContainer>
        <MudGrid>
            <MudItem xs="12" lg="9" sm="6" md="8">
                <MudCard Class="rounded-lg mud-elevation-4">
                    <MudCardHeader>

                        <CardHeaderContent>
                            <div class="d-flex flex-grow-1">
                                <div class="flex-none d-flex py-lg-3">
                                    <MudLink Href="@("/" + words)">
                                        <MudIcon Icon="@Icons.Material.Filled.ArrowBackIosNew" Size="Size.Large"></MudIcon>
                                    </MudLink>
                                </div>
                                <div class="">
                                    <MudText Typo="Typo.h5" Style="padding-top: 3px;">
                                        <b>@wordDetails.Value</b>
                                    </MudText>
                                    <MudText Typo="Typo.body2" Style="color:rgb(128,128,128)">
                                        <b> @ContentService["VacancyDetails:Posted"] @DateTimeConvert.GetDisplayPostedDate(wordDetails.CreateDate)</b>
                                    </MudText>
                                </div>
                            </div>

                        </CardHeaderContent>
                    </MudCardHeader>
                       <MudCardHeader>
                        <MudDivider />
                        <br />
                        <MudText>@((MarkupString)wordDetails.Description)</MudText>
                        <br />
                        <MudDivider Style="padding:10px;" />
                    </MudCardHeader>

                </MudCard>


            </MudItem>
            <MudItem xs="12" lg="3" sm="6" md="4">
                    <CascadingAuthenticationState>
                        <AuthorizeView>
                            <Authorized>
                                <MudCard Class="rounded-lg mud-elevation-4"> 
                                        <MudCardActions Style="flex-direction: column">
                                            <MudButton Variant="Variant.Filled" href=@($"/{words}/apply/{Slug}") Color="Color.Primary" FullWidth="true">
                                                <MudText>
                                                    <b>@ContentService["VacancyDetails:Apply Now"]</b>
                                                </MudText>
                                            </MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </Authorized>
                            <NotAuthorized>
                                <MudCard Class="rounded-lg mud-elevation-4">
                                    <MudCardActions>
                                        <MudButton Variant="Variant.Filled" href="sign-up" Color="Color.Primary" FullWidth="true">
                                            <MudText>
                                                <b>@ContentService["VacancyDetails:Sign Up"]</b>
                                            </MudText>
                                        </MudButton>
                                    </MudCardActions>
                                    <MudText Typo="Typo.body2" Style="padding:0 10px 10px 10px">
                                        @ContentService["VacancyDetails:Already have an account?"]
                                        <MudLink Typo="Typo.body2" href=@($"/sign-in?returnUrl={words}|{Slug}") Color="Color.Primary">
                                            <b>@ContentService["VacancyDetails:Sign In"]</b>
                                        </MudLink>
                                    </MudText>
                                </MudCard>
                            </NotAuthorized>
                        </AuthorizeView>
                    </CascadingAuthenticationState>
                
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    private bool _showLoader = false;

    [Parameter]
    public string Slug { get; set; }

    
    [Parameter]
    public WordDetailsResponse wordDetails { get; set; }

    [Parameter]
    public string words { get; set; }
   

    protected override async Task OnInitializedAsync()
    {
        
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                await Task.Delay(1000);
                _showLoader = true;
                StateHasChanged();
            }
        }
        catch (Exception)
        {
        }
    }

}