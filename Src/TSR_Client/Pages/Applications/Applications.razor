@page "/applications"
@using Application.Contracts.Dtos
@inject IApplicationService applicationService
<MudText Typo="Typo.h4">
    <b>Applications</b>
</MudText>

@if (applications.Items.Count == 0)
{
    <MudText Typo="Typo.h5" Style="text-align: center">You do not have any active applications</MudText>
}
else
{
    <MudContainer>
        <MudTable Items="@applications.Items" Breakpoint="Breakpoint.Md">
            <HeaderContent>
                <MudTh>Word Valoe</MudTh>
                <MudTh>Applied at</MudTh>
                <MudTh>Status name</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Word Valoe">@context.WordValoe</MudTd>
                    <MudTd DataLabel="Applied at">@context.CreatedAt.ToString("D")</MudTd>
                    <MudTd DataLabel="Status">@context.StatusName</MudTd>
                    <MudTd DataLabel="Action">
                        <MudButton Variant="Variant.Filled" OnClick="@((e) => OpenDialog(maxWidth, context.WordResponseAudioDto, context.Slug, context.StatusName))">More</MudButton>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        </MudContainer>
}


@code {

    private PagedList<ApplicationListDto> applications;

    protected override async Task OnInitializedAsync()
    {
        var response = await applicationService.GetAllApplications();
        if (response is not null)
        {
            applications = response;
        }
    }

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true };

    private void OpenDialog(DialogOptions options, IEnumerable<WordResponseAudioDto> WordResponses, string slug, string statusName)
    {
        Dialog.Show<MyDialog>("Applicant response", new DialogParameters { { "WordResponses", WordResponses }, { "Slug", slug }, { "StatusName", statusName }, { "isApplicant", true } }, options);
    }

}